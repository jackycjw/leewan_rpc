package com.leewan.client;

import com.leewan.share.handler.LengthBasedOutboundHandler;
import com.leewan.share.handler.codec.KryoRequestMessageEncoder;
import com.leewan.share.message.MethodMeta;
import com.leewan.share.message.RequestMessage;
import io.netty.bootstrap.Bootstrap;
import io.netty.buffer.ByteBuf;
import io.netty.buffer.ByteBufAllocator;
import io.netty.channel.*;
import io.netty.channel.nio.NioEventLoopGroup;
import io.netty.channel.socket.nio.NioSocketChannel;
import io.netty.handler.codec.compression.JdkZlibDecoder;
import io.netty.handler.codec.compression.JdkZlibEncoder;

import java.util.Arrays;
import java.util.HashMap;
import java.util.LinkedHashMap;

public class ClientApp {

    public static void main(String[] args) throws Exception {
        RpcClientConfiguration configuration = new RpcClientConfiguration();

        ChannelFuture channelFuture = new Bootstrap()
                .group(new NioEventLoopGroup())
                .channel(NioSocketChannel.class)
                .option(ChannelOption.CONNECT_TIMEOUT_MILLIS, 5000)
                .handler(new ChannelInitializer<>() {
                    @Override
                    protected void initChannel(Channel ch) throws Exception {
                        ChannelPipeline pipeline = ch.pipeline();
                        pipeline.addLast(new LengthBasedOutboundHandler(configuration.getMaxMessageSize()));
                        pipeline.addLast(new JdkZlibEncoder());
                        pipeline.addLast(new KryoRequestMessageEncoder());
                    }
                })
                .connect(configuration.getRemoteAddress(), configuration.getPort()).sync();
        Channel channel = channelFuture.channel();
        ChannelFuture future = channel.writeAndFlush(getRequestMessage());

    }

    public static RequestMessage getRequestMessage(){
        RequestMessage requestMessage = new RequestMessage();
        requestMessage.setMethodMeta(getMethodMeta());
        HashMap<Object, Object> map1 = new HashMap<>();
        map1.put("k1","v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111");

        HashMap<Object, Object> map2 = new HashMap<>();
        map2.put("k2","v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111");

        HashMap<Object, Object> map3 = new LinkedHashMap<>();
        map3.put("k3","v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111v3111111111111111111111111111111111111111111111111111111111111111111");

        requestMessage.getParameters().add("111111111");
        requestMessage.getParameters().add(map1);
        requestMessage.getParameters().add(map2);
        requestMessage.getParameters().add(map3);
        return requestMessage;
    }

    public static MethodMeta getMethodMeta(){
        MethodMeta meta = new MethodMeta();
//        meta.setMethod(10);
        meta.setMethodName("hhhh");
        meta.setParameterTypeNames(Arrays.asList("aa","bb"));
        return meta;
    }
}
